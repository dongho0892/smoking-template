<!--<p id="notice"><#%= notice %></p>-->

<!--<h1>Smoking Areas</h1>-->

<!--<table>-->
<!--  <thead>-->
<!--    <tr>-->
<!--      <th>Area name</th>-->
<!--      <th>Latitude</th>-->
<!--      <th>Longitude</th>-->
<!--      <th>Area catagory</th>-->
<!--      <th>Statute</th>-->
<!--      <th>Penalty</th>-->
<!--      <th>Address</th>-->
<!--      <th colspan="3"></th>-->
<!--    </tr>-->
<!--  </thead>-->

<!--  <tbody>-->
<!--    <#% @smoking_areas.each do |smoking_area| %>-->
<!--      <tr>-->
<!--        <td><#%= smoking_area.area_name %></td>-->
<!--        <td><#%= smoking_area.latitude %></td>-->
<!--        <td><#%= smoking_area.longitude %></td>-->
<!--        <td><#%= smoking_area.area_catagory %></td>-->
<!--        <td><#%= smoking_area.statute %></td>-->
<!--        <td><#%= smoking_area.penalty %></td>-->
<!--        <td><#%= smoking_area.address %></td>-->
<!--        <td><#%= link_to 'Show', smoking_area %></td>-->
<!--        <td><#%= link_to 'Edit', edit_smoking_area_path(smoking_area) %></td>-->
<!--        <td><#%= link_to 'Destroy', smoking_area, method: :delete, data: { confirm: 'Are you sure?' } %></td>-->
<!--      </tr>-->
<!--    <#% end %>-->
<!--  </tbody>-->
<!--</table>-->

<!--<br>-->

<!--<#%= link_to 'New Smoking Area', new_smoking_area_path %>-->
    <!-- start head bottom -->
    <div class="bottom">
      <div class="left">
        <h1>흡연구역 알리미</h1>
      </div>
      <div class="right">
        <h1>dashboard /</h1>
        <a href="#">page name</a>
      </div>
    </div>
    <!-- end head bottom -->
  </div>
<div class="container">
<div id="map" style="width:90%;height:650px;"></div>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=1ff16577c702fbde5a0877cc98c9dee0"></script>

<script>

var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
    mapOption = { 
        center: new daum.maps.LatLng(37.4977796, 127.0755652), // 지도의 중심좌표
        level: 4 // 지도의 확대 레벨
    };  

var map = new daum.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

// HTML5의 geolocation으로 사용할 수 있는지 확인합니다 
if (navigator.geolocation) {
    
    // GeoLocation을 이용해서 접속 위치를 얻어옵니다
    navigator.geolocation.getCurrentPosition(function(position) {
        
        var lat = position.coords.latitude, // 위도
            lon = position.coords.longitude; // 경도
        
        var locPosition = new daum.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다
            message = '<center><div style="padding:5px;">현재 위치!</div></center>'; // 인포윈도우에 표시될 내용입니다
        
        // 마커와 인포윈도우를 표시합니다
        displayMarker(locPosition, message);
            
      });
    
} else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다
    
    var locPosition = new daum.maps.LatLng(33.450701, 126.570667),    
        message = 'geolocation을 사용할수 없어요..'
        
    displayMarker(locPosition, message);
}


// 지도에 마커와 인포윈도우를 표시하는 함수입니다
function displayMarker(locPosition, message) {

    // 마커를 생성합니다
    var marker = new daum.maps.Marker({  
        map: map, 
        position: locPosition
    }); 
    
    var iwContent = message, // 인포윈도우에 표시할 내용
        iwRemoveable = true;

    // 인포윈도우를 생성합니다
    var infowindow = new daum.maps.InfoWindow({
        content : iwContent,
        removable : iwRemoveable
    });
    
    // 인포윈도우를 마커위에 표시합니다 
    infowindow.open(map, marker);
    
    // 지도 중심좌표를 접속위치로 변경합니다
    map.setCenter(locPosition);      
}    


var latitude = []; 
var longitude = [];    // 위도 경도 자료 위치

var sw = [],          //   배열 생성
    ne = [];
    
var rectangleBounds = [];



daum.maps.event.addListener(map, 'zoom_changed', function() {        
    
    // 지도의 현재 레벨을 얻어옵니다
    var level = map.getLevel();
    console.log(level);
});


<% @smoking_areas.each do |smoking_area| %>
   
latitude = <%= smoking_area.latitude %>   // 한번씩 뽑아서 위도, 경도에 넣어줌.
longitude = <%= smoking_area.longitude %> 


// // 지도에 표시할 원을 생성합니다
// var circle = new daum.maps.Circle({
//     center : new daum.maps.LatLng(37.4977796, 127.0755652),  // 원의 중심좌표 입니다 
//     radius: 20, // 미터 단위의 원의 반지름입니다 
//     strokeWeight: 1, // 선의 두께입니다 
//     strokeColor: '#b30000', // 선의 색깔입니다
//     strokeOpacity: 0.7, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다
//     strokeStyle: 'solid', // 선의 스타일 입니다
//     fillColor: '#b30000', // 채우기 색깔입니다
//     fillOpacity: 0.7  // 채우기 불투명도 입니다   
// }); 

// // 지도에 원을 표시합니다 
// circle.setMap(map); 

sw = new daum.maps.LatLng(latitude + 0.0002, longitude + 0.0002), // 사각형 영역의 남서쪽 좌표
ne = new daum.maps.LatLng(latitude - 0.0002, longitude - 0.0002); // 사각형 영역의 북동쪽 좌표


// 사각형을 구성하는 영역정보를 생성합니다
// 사각형을 생성할 때 영역정보는 LatLngBounds 객체로 넘겨줘야 합니다
rectangleBounds = new daum.maps.LatLngBounds(sw, ne);


// 지도에 표시할 사각형을 생성합니다
var rectangle = new daum.maps.Rectangle({
    bounds: rectangleBounds, // 그려질 사각형의 영역정보입니다
    strokeWeight: 1, // 선의 두께입니다
    strokeColor: '#ff3333', // 선의 색깔입니다
    strokeOpacity: 0.7, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다
    strokeStyle: 'solid', // 선의 스타일입니다
    fillColor: '#ff3333', // 채우기 색깔입니다
    fillOpacity: 0.7 // 채우기 불투명도 입니다
});
// 지도에 사각형을 표시합니다
rectangle.setMap(map);
<% end %>

</script>
</div>


  <!-- panel script -->
  <% content_for 'javascript_content' do %>
  <%= javascript_include_tag params[:controller] %>
  <script>
  console.log("smoking_areas.index");
  </script>
  <% end %>
  